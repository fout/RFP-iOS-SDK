<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming Guide on RFP-iOS-SDK Docs</title>
    <link>https://fout.github.io/RFP-iOS-SDK/en/programming-guide/</link>
    <description>Recent content in Programming Guide on RFP-iOS-SDK Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    
	<atom:link href="https://fout.github.io/RFP-iOS-SDK/en/programming-guide/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Acquisition of advertising framework ID</title>
      <link>https://fout.github.io/RFP-iOS-SDK/en/programming-guide/2_2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fout.github.io/RFP-iOS-SDK/en/programming-guide/2_2/</guid>
      <description>Currently, you should contact our representative regarding advertisement framework registration settings.
The advertisement framework ID is issued from the management screen. When the following information is set, the advertisement framework ID is output.
 Advertisement framework name Advertisement image size
 Advertisement format(necessary only for simple In-Feed advertisements described later)
 Number of advertisement cases
 Advertisement position array
 HTML, width, height (necessary only when selecting the format to depict on WebView)</description>
    </item>
    
    <item>
      <title>Simple infeed advertising</title>
      <link>https://fout.github.io/RFP-iOS-SDK/en/programming-guide/2_3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fout.github.io/RFP-iOS-SDK/en/programming-guide/2_3/</guid>
      <description>Simple In-Feed advertisement display Acquiring events when displaying simple In-Feed advertisements Additional loading of simple In-Feed advertisements Simple In-Feed advertisement format Points to note when using simple In-Feed advertisements  In order to display advertisements, you need to enable SDK first. For details, please refer to Installing Guide and Initializing the SDK
A precondition for simple In-Feed advertisements is use of UITableView.
For other uses, use Customized In-Feed advertisements.</description>
    </item>
    
    <item>
      <title>Customized In-Feed advertising</title>
      <link>https://fout.github.io/RFP-iOS-SDK/en/programming-guide/2_4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fout.github.io/RFP-iOS-SDK/en/programming-guide/2_4/</guid>
      <description>Loading customized In-Feed advertisements Displaying customized In-Feed advertisements Notifying impressions of customized In-Feed advertisements Transition processing when clicking customized In-Feed advertisements Acquiring display characters for customized In-Feed advertisement button Loading customized In-Feed advertisements and acquiring events at the time of each notification Customized In-Feed advertisement parameters Arbitrary use of advertisement formats provided as default by SDK Acquiring exceptions occurring within SDK About Dark Mode  When you want to display with more flexibility than with simple In-Feed advertisements, you can use customized In-Feed advertisement functions.</description>
    </item>
    
    <item>
      <title>Support for video advertising</title>
      <link>https://fout.github.io/RFP-iOS-SDK/en/programming-guide/2_5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fout.github.io/RFP-iOS-SDK/en/programming-guide/2_5/</guid>
      <description>※ Currently video advertisements can only be used by limited partners
 Components provided in the video advertising SDK Video advertisement judgment Used with video advertising Delegate method Acquiring video advertisements Playback preparation complete Playing videos End playback Setting the cache Setting the tap action  
Components provided with the video advertisement SDK  RFPPlayerControl  This is the UI view displaying the video player. This provides a function to control the video.</description>
    </item>
    
    <item>
      <title>Support for GIF advertising</title>
      <link>https://fout.github.io/RFP-iOS-SDK/en/programming-guide/2_6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fout.github.io/RFP-iOS-SDK/en/programming-guide/2_6/</guid>
      <description>Identifying GIF advertisement Displaying GIF advertisement  The following guide shows an example about how to load animated GIF by UIImageView for users who want to display GIF ads.
 Also some libraries like SwiftGif can display animated GIF ads.  
Identifying GIF advertisement Loading data from Customized In-Feed advertisement parameters&amp;rsquo;s property&amp;rsquo;,can identify data is GIF if mimeType from response data is image/gif.
URLSession.shared.dataTask(with: URLRequest(url: instreamInfoModel.imageURL!)) { (data, response, error) in guard let data = data, let response = response as?</description>
    </item>
    
    <item>
      <title>Set HTTP request timeout interval</title>
      <link>https://fout.github.io/RFP-iOS-SDK/en/programming-guide/2_7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fout.github.io/RFP-iOS-SDK/en/programming-guide/2_7/</guid>
      <description>Set HTTP request timeout interval  
Set HTTP request timeout interval (Can be used on v2.6.0 or later)
Your app can use the RFP.rfpSetHttpRequestTimeoutInterval(_:) to set HTTP request&amp;rsquo;s timeout interval in RFP.
func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplicationLaunchOptionsKey: Any]?) -&amp;gt; Bool { // Set HTTP request interval to 15s RFP.rfpSetHttpRequestTimeoutInterval(15) // ※ Be sure to set the rfpSetHttpRequestTimeoutInterval before rfpInitMedia RFP.rfpInitMedia(&amp;quot;your_media_id&amp;quot;) // Acquire current setting value let timeoutInterval = RFP.</description>
    </item>
    
    <item>
      <title>Error code description</title>
      <link>https://fout.github.io/RFP-iOS-SDK/en/programming-guide/2_8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fout.github.io/RFP-iOS-SDK/en/programming-guide/2_8/</guid>
      <description>Description of error codes that acquired from Loading customized In-Feed advertisements and acquiring events at the time of each notification.
   error code description     1000 Couldn&amp;rsquo;t load any ad information for Ad spot.   1001 Media ID has not been set yet, please refer to Initializing the SDK.   1002 Internal error in SDK. Please contact our representative.   1003 Media ID is invalid.</description>
    </item>
    
    <item>
      <title>Library Support for Viewable Impression</title>
      <link>https://fout.github.io/RFP-iOS-SDK/en/programming-guide/2_9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://fout.github.io/RFP-iOS-SDK/en/programming-guide/2_9/</guid>
      <description>(Can be used on v2.9.1 or later)
RFP iOS SDK provides API RFPVisibilityTracker to support viewable impression for advertisements.
Please call RFPVisibilityTracker.init(startTrackingAdView: UIView, infoModel: RFPInstreamInfoModel) and pass in the advertisement&amp;rsquo;s UIView instance and RFPInstreamInfoModel&amp;rsquo;s instance which keeps your advertisement&amp;rsquo;s data to init the tracker for tracking the advertisement&amp;rsquo;s viewable impression. The tracker will send impression event from the SDK when the advertisement satisfy the viewable impression conditions.
We use NSTimer in RFPVisibilityTracker.</description>
    </item>
    
  </channel>
</rss>